services:
  front_dev:
    build:
      context: .
      dockerfile: ./services/front/Dockerfile.local
    container_name: front_dev
    restart: always
    ports:
     - 3000:3000
    tty: true
    stdin_open: true
    environment:
     - CHOKIDAR_USEPOLLING=true
     - REACT_APP_FQDN=http://localhost:5000
    entrypoint: npm run start
    volumes:
     - type: bind
       source: ./services/front/
       target: /app
  
  migrate_timescaledb_dev:
    build:
      context: .
      dockerfile: ./services/migrate_timescaledb/Dockerfile
    container_name: migrate_timescaledb_dev
    environment:
     - TZ=Asia/Tokyo
    entrypoint: tail -f /dev/null
    volumes:
     - ./services/migrate_timescaledb:/go/src

  crawler_dev:
    build:
      context: .
      dockerfile: ./services/crawler/local.Dockerfile
    container_name: crawler_dev
    restart: always
    environment:
      - TZ=Asia/Tokyo
      - ROOT_PATH=/go/src
    entrypoint: tail -f /dev/null
    volumes: 
      - ./services/crawler:/go/src
      - go-pkg:/go/pkg
      - go-pkg:/go/bin

  api-server:
    build:
      context: .
      dockerfile: ./services/api-server/Dockerfile.local
    container_name: api-server
    restart: always
    environment:
      - TZ=Asia/Tokyo
      - DB_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql-server:5432/${POSTGRES_DB}?sslmode=disable
    entrypoint: tail -f /dev/null
    ports:
     - 1323:1323
    volumes:
      - ./services/api-server:/go/src
      - api-server-pkg:/go/pkg
      - api-server-pkg:/go/bin

volumes:
  go-pkg:
  api-server-pkg:
  